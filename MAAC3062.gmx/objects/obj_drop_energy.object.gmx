<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_energy_container</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_drop</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Set image rotation speed
spriteRotateSpeed = 0;

// Amount by which to decrease left/right movement until stopped
movementSlowDownAmount = .001;

// Prevent built-in animation
image_speed = 0;
image_index = 0;

// Help remove any energy drops that are this many pixels off of the screen
// in any direction. Drops also automatically expire after x seconds (see maxLife).
maxOffScreenRange = 50;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// If the drop is out of bounds, wipe 'er out
if (x &lt; 0-maxOffScreenRange || x &gt; room_width+maxOffScreenRange || y &lt; 0-maxOffScreenRange || y &gt; room_height+maxOffScreenRange) {
    instance_destroy();
    return 0;
}

if (movementDirection == "LEFT") {
    //scr_entity_moveLeft();
}

if (movementDirection == "RIGHT") {
    //scr_entity_moveRight();
}


// FALLING - TEMPORARY - Special behaviour, which I (Ben) copied &amp; pasted from entity movement code.
// But in this case, once the object collides with the floor, we stop the movementSpeed as well.
if (!isJumping &amp;&amp; !isDropping) {
    var collisionAtNewLocation = place_meeting(x, y, obj_physicsTile);
    
    // If there is a collision at the new location, ease it down to the tile then stop everything
    if (collisionAtNewLocation) {
        movementSpeed = 0;
        
        // Ease 'er on down
        while (place_meeting(x, y + 1, obj_physicsTile) == false) {
            y++;
        }
    }
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Create the emitter that emits energy orbs
var inst = instance_create(x, y, obj_emitter_energy_orb);
// # of orbs emitted is based on value of energy drop (each orb adds 1 energy to level)
inst.particleCount = value;

// Play some kind of cool sound
audio_play_sound(snd_energyPickup, 0, false);
audio_sound_gain(snd_energyPickup, 0.6, 0);

// Destroy the drop
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
