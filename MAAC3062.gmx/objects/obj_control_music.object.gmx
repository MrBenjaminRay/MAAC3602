<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ctrl_music</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_all();

startEarthLoop = true;

music = snd_menuClick_reject;
fadeOut = false;
failurePlaying = false;
loopPlaying = false;

switch(room) {
    case rm_level_premoon:
        audio_play_sound(mus_tutorial, 100, true);
        music = mus_tutorial;
        break;
    case rm_level_moon:
        audio_play_sound(mus_tutorialBeat, 100, true);
        music = mus_tutorialBeat;
        break;
    case rm_level_forest:
        audio_play_sound(mus_forest, 100, true);
        music = mus_forest;
        break;
    case rm_level_desert:
        audio_play_sound(mus_desert, 100, true);
        music = mus_desert;
        break;
    case rm_level_ice:
        audio_play_sound(mus_ice, 100, true);
        music = mus_ice;
        break;
    case rm_level_underwater:
        audio_play_sound(mus_water, 100, true);
        music = mus_water;
        break;
    case rm_level_mars:
        audio_play_sound(mus_mars, 100, true);
        music = mus_mars;
        break;
    case rm_level_asteroid:
        audio_play_sound(mus_asteroid, 100, true);
        music = mus_asteroid;
        break;
    case rm_level_earth:
        audio_play_sound(mus_earthIntro, 100, false);
        music = mus_earthIntro;
        break;
    default:
        audio_play_sound(snd_menuClick_reject, 100, true);
        music = snd_menuClick_reject;
        break;
}
audio_sound_gain(music, 0, 0);
audio_sound_gain(music, global.musicVolume, global.musicFadeIn);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(music == mus_earthIntro &amp;&amp; !audio_is_playing(mus_earthIntro) &amp;&amp; startEarthLoop) {
    audio_play_sound(mus_earthLoop, 100, true);
    audio_sound_gain(mus_earthLoop, global.musicVolume, 0);
    startEarthLoop = false;
}

if(global.currentLevelFailed == 1 &amp;&amp; !fadeOut) {
    audio_sound_gain(music, 0, 300);
    fadeOut = true;
}
/*
if(fadeOut &amp;&amp; !audio_is_playing(music) &amp;&amp; !failurePlaying) {
    audio_play_sound(mus_loseIntro, 100, false);
    audio_sound_gain(mus_loseIntro, global.musicVolume, 0);
    failurePlaying = true;
}
if(failurePlaying &amp;&amp; !audio_is_playing(mus_loseIntro)&amp;&amp; !loopPlaying) {
    audio_play_sound(mus_loseLoop, 100, true);
    audio_sound_gain(mus_loseLoop, global.musicVolume, 0);
    loopPlaying = true;
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
