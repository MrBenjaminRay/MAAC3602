<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_miner</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>22</depth>
  <persistent>0</persistent>
  <parentName>obj_entity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>currentTimeToMinerals</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>irandom(960)</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timeToMinerals</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>960</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;

staggeredStart = irandom(60);
animStartCounter = staggeredStart;

drawDamageSprite = false;

minerLevel = 1; // Every level increase gives 1 more mineral (level 3 gives 3, etc.)

mineralCount = 0;   // Total # of minerals obtained by this miner on this level
pickCount = 0;      // Total # of times the miner has mined
                    // (regardless of how many minerals picked up)

// Pick counts (not minerals mined) determine current level.
picksForLevel_2 = 150; // Total # of pickCount to get to level 2 (since level started)
picksForLevel_3 = 500; // Total # of pickCount to get to level 3 (since level started)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state == "Paused") {
    return 0;
}

currentTimeToMinerals += global.deltaTime;

if (currentTimeToMinerals &gt;= timeToMinerals) {
    currentTimeToMinerals -= timeToMinerals;
    
    pickCount++;
    
    scr_minerals_change(minerLevel);
    
    var temp = instance_create(x, y, obj_mineText);
    temp.text = "+" + string(minerLevel)
}

if (animStartCounter &lt;= 0) {
    image_speed = 0.05;
} else {
    animStartCounter--;
}

// Check for level up
if (minerLevel == 1 &amp;&amp; pickCount &gt; picksForLevel_2) {
    // Miner has leveled up to level 2
    minerLevel++;
    var temp = instance_create(x, y, obj_mineText);
    temp.text = "LEVEL UP!";
} else if (minerLevel == 2 &amp;&amp; pickCount &gt; picksForLevel_3) {
    // Miner has leveled up to level 3
    minerLevel++;
    var temp = instance_create(x, y, obj_mineText);
    temp.text = "LEVEL UP!";
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (drawDamageSprite) {
    draw_sprite(spr_miner_hurt, image_index, x, y);
} else {
    draw_self();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
