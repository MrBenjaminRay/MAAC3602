<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_miner</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>22</depth>
  <persistent>0</persistent>
  <parentName>obj_entity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>currentTimeToMinerals</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>irandom(960)</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timeToMinerals</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>960</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
imageSpeed_normal = 0.05;
imageSpeed_hurt = imageSpeed_normal*2; // Hurt sprite speed has twice as many frames, so make it twice as fast

staggeredStart = irandom(60);
animStartCounter = staggeredStart;

damageAnimationLength = 2000;       // Length of time to display damage animation after taking damage
damageAnimationRemaining = 0;       // Current amount of damage animation length remaining (0 unless recently took damage)

drawDamageSprite = false;

minerLevel = 1; // Every level increase gives 1 more mineral (level 3 gives 3, etc.)

mineralCount = 0;   // Total # of minerals obtained by this miner on this level
pickCount = 0;      // Total # of times the miner has mined
                    // (regardless of how many minerals picked up)

// Leveling up removed Mar 28 2017
// Pick counts (not minerals mined) determine current level.
//picksForLevel_2 = 150; // Total # of pickCount to get to level 2 (since level started)
//picksForLevel_3 = 500; // Total # of pickCount to get to level 3 (since level started)

deadMinerOffsetX = 12; // X offset to use when creating miner dying object (miners not lined up in sprites)
deadMinerOffsetY = 5; // X offset to use when creating miner dying object (miners not lined up in sprites)

// Update stats object every time a miner is spawned on a level
scr_statistics_setData(31, scr_statistics_getData(31)+1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//scr_msg_minerKilled(x - 220, y - 230);

// Spawn a dying miner
var inst = instance_create(x+deadMinerOffsetX, y+deadMinerOffsetY, obj_miner_dying);

if (instance_number(obj_miner) == 1) {
    // This is the last miner on the level, and it is dying now.
    scr_doLevelFail_minersDead(inst.x + inst.sprite_width/2, inst.y + inst.sprite_width/2);
}

// Update stats object every time a miner is killed on a level
scr_statistics_setData(32, scr_statistics_getData(32)+1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state == "Paused") {
    return 0;
}

if (damageAnimationRemaining &lt;= 0) {
    // Only increment minerals when not taking damage
    currentTimeToMinerals += global.deltaTime;
}

if (currentTimeToMinerals &gt;= timeToMinerals) {
    currentTimeToMinerals -= timeToMinerals;
    
    pickCount++;
    
    //scr_minerals_change(minerLevel);

    // Create miner cue. With no text specified, minerals sprite will be displayed instead.    
    var temp = instance_create(x + sprite_width/2, y, obj_minerCue);

}

if (animStartCounter &gt; 0) {
    // Not ready to show animation (random delay to offset each miner)
    // Decrement start counter
    animStartCounter--;
} else {
    // Animation happening, so check if we should show regular or damage animation
    // Variable damageAnimationRemaining set in scr_entity_dealDamage when damage taken
    if (damageAnimationRemaining &gt; 0) {
        drawDamageSprite = true;
        image_speed = imageSpeed_hurt;
        damageAnimationRemaining = max(damageAnimationRemaining - global.deltaTime, 0);
    } else {
        drawDamageSprite = false;
        image_speed = imageSpeed_normal;
    }
}

// Check for level up
// Level up removed Mar 28 2017
//if (minerLevel == 1 &amp;&amp; pickCount &gt; picksForLevel_2) {
    // Miner has leveled up to level 2
//    minerLevel++;
//    var temp = instance_create(x + sprite_width/2, y, obj_minerCue);
//    temp.text = "LEVEL UP!"; // Set text to be displayed instead of minerals sprite
//} else if (minerLevel == 2 &amp;&amp; pickCount &gt; picksForLevel_3) {
//    // Miner has leveled up to level 3
//    minerLevel++;
//    var temp = instance_create(x + sprite_width/2, y, obj_minerCue);
//    temp.text = "LEVEL UP!"; // Set text to be displayed instead of minerals sprite
//}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (drawDamageSprite) {
    draw_sprite(spr_miner_hurt_blended, image_index, x, y);
} else {
    draw_self();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
