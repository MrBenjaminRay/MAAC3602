<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>particleScale = 1; // x/y scale of particles to be emitted. 1 = default. Override for smaller.

maxImageAlpha = 1; // To be overridden by inheriting objects as needed.

particleCount = 5; // To be overridden by inheriting objects as needed.

particleType = noone; // To be overridden by inheriting objects (REQUIRED)

// Spawn particles at random point within a radius around the emitter.
// Use 0 (default) for all particles to start at exact position of emitter.
spawnRandomizeRadius = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Because this is an instant particle emitter, emit everything 
// at once and then destroy self

// Emit
for (var i=0; i&lt;particleCount; i++) {

    // Randomize particle's initial position based on spawnRandomizeRadius
    var newX;
    var newY;
    if (spawnRandomizeRadius == 0) {
        // Use x/y of emitter
        newX = x;
        newY = y;
    } else {
        // Randomize within radius specified around x/y of emitter
        var angle = random_range(1, pi*2); // Skip 0 (it's same as pi*2)
        var radius = random_range(0, spawnRandomizeRadius);
        newX = x + cos(angle) * radius;
        newY = y + sin(angle) * radius;
    }
    var inst = instance_create(newX, newY, particleType);

    // Set scale
    inst.image_xscale = particleScale;
    inst.image_yscale = particleScale;
    
    // Set image alpha values
    inst.maxImageAlpha = maxImageAlpha;
}

// Destroy self
instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
