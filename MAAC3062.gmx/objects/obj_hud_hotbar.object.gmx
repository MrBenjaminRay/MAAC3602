<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dummy_hotbar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Automatically pull info from global.towers[] (see obj_control create event)
// Tower count must match # of entries in global.towers, otherwise it will blow up.

towerCount = 6; 

slotWidth = sprite_get_width(spr_hotbar_item_back);

// Set width based on number of tower slots to display
width = slotWidth * towerCount;

// Deduct 1 pixel for every slot above the first one as we collapse 1 px of borders between slots
if (towerCount &gt; 1) {
    width -= (towerCount-1);
}

if (window_get_fullscreen()) {
    x = round(global.screenWidth/2 - width/2); // Round so we never start on x value with .5
    y = global.screenHeight - sprite_get_height(spr_hotbar_item_back);
} else {
    x = view_wview[0]/2 - width/2;
    y = view_hview[0] - sprite_get_height(spr_hotbar_item_back);
}

for (var i=0; i&lt;towerCount; i++) {
    var item_x = x + (i * slotWidth);
    if (i &gt; 0) {
        item_x -= i; // Shift 1 to left for every slot after first one to collapse borders between them
    }
    var slot = instance_create(item_x, y, obj_hud_hotbar_item);
    slot.towerIndex = i;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Prevent drawing of this object (just has placeholder sprite)
// Hotbar items drawn individually in obj_hud_hotbar_item
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
