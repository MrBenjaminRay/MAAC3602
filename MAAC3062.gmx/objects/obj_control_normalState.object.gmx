<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dummy_normalStateControl</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Format:
//      Name
//      Cost (Energy)
//      Object

towers[0, 0] = "Basic Tower";
towers[0, 1] = 100;
towers[0, 2] = obj_tower_basic;
towers[0, 3] = spr_tower_basic;

towers[1, 0] = "Super Freezer";
towers[1, 1] = 1000;
towers[1, 2] = obj_tower_superFreezer;
towers[1, 3] = spr_tower_superFreezer;

towers[2, 0] = "Tactical Moartar";
towers[2, 1] = 500;
towers[2, 2] = obj_tower_tacticalMortar;
towers[2, 3] = spr_tower_tacticalMortar;

towers[3, 0] = "109 Cal Rifle";
towers[3, 1] = 500;
towers[3, 2] = obj_tower_109CalRifle;
towers[3, 3] = spr_tower;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state == "Paused") {
    return 0;
}


var canProceed = instance_number(obj_tower_m6100) == 0;
canProceed &amp;= global.energy &gt;= global.towers[5, 1]

if (instance_number(obj_tower_m6100) == 0) {
    scr_state_clearControlObjects();

    var buildCont = instance_create(x, y, obj_control_buildState);
    buildCont.tower = global.towers[5, 0];
    buildCont.towerCost = global.towers[5, 1];
    buildCont.towerObj = global.towers[5, 2];
    buildCont.towerSpr = global.towers[5, 3];
    
    scr_state_setBuild();
} else {
    scr_tower_buildRejectNotification_m6100();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state == "Paused") {
    return 0;
}

if (global.energy &gt;= global.towers[4, 1]) {
    scr_state_clearControlObjects();

    var buildCont = instance_create(x, y, obj_control_buildState);
    buildCont.tower = global.towers[4, 0];
    buildCont.towerCost = global.towers[4, 1];
    buildCont.towerObj = global.towers[4, 2];
    buildCont.towerSpr = global.towers[4, 3];
    
    scr_state_setBuild();
} else {
    scr_tower_buildRejectionNotification_flameThrower();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="52">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state == "Paused") {
    return 0;
}

if (global.energy &gt;= global.towers[3, 1]) {
    scr_state_clearControlObjects();

    var buildCont = instance_create(x, y, obj_control_buildState);
    buildCont.tower = global.towers[3, 0];
    buildCont.towerCost = global.towers[3, 1];
    buildCont.towerObj = global.towers[3, 2];
    buildCont.towerSpr = global.towers[3, 3];
    
    scr_state_setBuild();
} else {
    scr_tower_buildRejectionNotification_109Cal();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state == "Paused") {
    return 0;
}

if (global.energy &gt;= global.towers[2, 1]) {
    scr_state_clearControlObjects();

    var buildCont = instance_create(x, y, obj_control_buildState);
    buildCont.tower = global.towers[2, 0];
    buildCont.towerCost = global.towers[2, 1];
    buildCont.towerObj = global.towers[2, 2];
    buildCont.towerSpr = global.towers[2, 3];
    
    scr_state_setBuild();
} else {
    scr_tower_buildRejectionNotification_tacticalMortar();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state == "Paused") {
    return 0;
}

if (global.energy &gt;= global.towers[1, 1]) {
    scr_state_clearControlObjects();

    var buildCont = instance_create(x, y, obj_control_buildState);
    buildCont.tower = global.towers[1, 0];
    buildCont.towerCost = global.towers[1, 1];
    buildCont.towerObj = global.towers[1, 2];
    buildCont.towerSpr = global.towers[1, 3];
    
    scr_state_setBuild();
} else {
    scr_tower_buildRejectionNotification_superFreezer();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state == "Paused") {
    return 0;
}

if (global.energy &gt;= global.towers[0, 1]) {
    scr_state_clearControlObjects();
    
    var buildCont = instance_create(x, y, obj_control_buildState);
    buildCont.tower = global.towers[0, 0];
    buildCont.towerCost = global.towers[0, 1];
    buildCont.towerObj = global.towers[0, 2];
    buildCont.towerSpr = global.towers[0, 3];
    
    scr_state_setBuild();
} else {
    scr_tower_buildRejectionNotification_basic();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="48">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state != "Paused") {
    scr_state_setDestroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Click GUI Components</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state == 'Paused') {
    scr_state_setNormal();
} else {
    scr_state_setPaused();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
