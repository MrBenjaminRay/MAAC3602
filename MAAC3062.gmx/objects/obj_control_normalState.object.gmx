<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dummy_normalStateControl</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="5" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state == "Paused") {
    return 0;
}

// Check if any other instances of tower exist:
if (instance_number(obj_tower_RT6100) &gt; 0) {
    scr_notification("You cannot build another one.", c_black, c_yellow);
    return 0;
}

// Check if Tower Unlocked:
if (global.towerUnlocked[5] == false) {
    scr_notification("You have not unlocked this tower.", c_black, c_yellow);
    return 0;
    
}

// Check if Energy Requirements Met:
if (global.energy &lt; global.towers[5, 1] * global.towerUpgradeLevel[5]) {
    scr_notification("You don't have enough energy to build this.", c_black, c_yellow);
    return 0;
}

// Build Tower:
scr_normal_beginBuild(5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state == "Paused") {
    return 0;
}

// Check if Tower Unlocked:
if (global.towerUnlocked[4] == false) {
    scr_notification("You have not unlocked this tower.", c_black, c_yellow);
    return 0;
    
}

// Check if Energy Requirements Met:
if (global.energy &lt; global.towers[4, 1] * global.towerUpgradeLevel[4]) {
    scr_notification("You don't have enough energy to build this.", c_black, c_yellow);
    return 0;
}

// Build Tower:
scr_normal_beginBuild(4);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="52">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state == "Paused") {
    return 0;
}

// Check if Tower Unlocked:
if (global.towerUnlocked[3] == false) {
    scr_notification("You have not unlocked this tower.", c_black, c_yellow);
    return 0;
    
}

// Check if Energy Requirements Met:
if (global.energy &lt; global.towers[3, 1] * global.towerUpgradeLevel[3]) {
    scr_notification("You don't have enough energy to build this.", c_black, c_yellow);
    return 0;
}

// Build Tower:
scr_normal_beginBuild(3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state == "Paused") {
    return 0;
}

// Check if Tower Unlocked:
if (global.towerUnlocked[2] == false) {
    scr_notification("You have not unlocked this tower.", c_black, c_yellow);
    return 0;
    
}

// Check if Energy Requirements Met:
if (global.energy &lt; global.towers[2, 1] * global.towerUpgradeLevel[2]) {
    scr_notification("You don't have enough energy to build this.", c_black, c_yellow);
    return 0;
}

// Build Tower:
scr_normal_beginBuild(2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state == "Paused") {
    return 0;
}

// Check if Tower Unlocked:
if (global.towerUnlocked[1] == false) {
    scr_notification("You have not unlocked this tower.", c_black, c_yellow);
    return 0;
    
}

// Check if Energy Requirements Met:
if (global.energy &lt; global.towers[1, 1] * global.towerUpgradeLevel[1]) {
    scr_notification("You don't have enough energy to build this.", c_black, c_yellow);
    return 0;
}

// Build Tower:
scr_normal_beginBuild(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state == "Paused") {
    return 0;
}

// Check if Tower Unlocked:
if (global.towerUnlocked[0] == false) {
    scr_notification("You have not unlocked this tower.", c_black, c_yellow);
    return 0;
}

// Check if Energy Requirements Met:
if (global.energy &lt; global.towers[0, 1] * global.towerUpgradeLevel[0]) {
    scr_notification("You don't have enough energy to build this.", c_black, c_yellow);
    return 0;
}

// Build Tower:
scr_normal_beginBuild(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="48">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state != "Paused") {
    scr_state_setDestroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Click GUI Components</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state == 'Paused') {
    scr_state_setNormal();
} else {
    scr_state_setPaused();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
