<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dummy_particleControl</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Create the particle system
global.partSystem_sloth = part_system_create();

// Create &amp; configure the particles
global.part_sloth1 = part_type_create();
global.part_sloth2 = part_type_create();
part_type_sprite(global.part_sloth1, spr_sloth_heart1, false, 0, 0);    // Sprite
part_type_size(global.part_sloth1,.15,.3,.001,0);                       // Size
part_type_direction(global.part_sloth1,80,100,0,25);                    // Direction
part_type_speed(global.part_sloth1,1,2,0,0);                            // Speed
part_type_life(global.part_sloth1,1200,1400);                           // Lifespan (in steps)
part_type_sprite(global.part_sloth2, spr_sloth_heart2, false, 0, 0);    // Sprite
part_type_size(global.part_sloth2,.3,.4,.001,0);                        // Size
part_type_direction(global.part_sloth2,85,95,0,25);                     // Direction
part_type_speed(global.part_sloth2,.5,1.5,0,0);                         // Speed
part_type_life(global.part_sloth2,1200,1400);                           // Lifespan (in steps)

//part_type_size(global.part_sloth,.01,1,0,0);                    //This is for the size






global.P_System = part_system_create();
global.Particle1 = part_type_create();
//part_type_shape(global.Particle1, pt_shape_disk);           //This defines the particles shape
part_type_size(global.Particle1,.01,1,0,0);                    //This is for the size
//part_type_scale(global.Particle1,1,1);                       //This is for scaling
//part_type_color1(global.Particle1,c_red);                 //This sets its colour. There are three different codes for this
//part_type_alpha1(global.Particle1,.1);                        //This is its alpha. There are three different codes for this
part_type_speed(global.Particle1,0.1,.01,-0.10,0);            //The particles speed
//part_type_direction(global.Particle1,0,359,0,20);            //The direction
//part_type_orientation(global.Particle1,0,0,0,0,1);           //This changes the rotation of the particle
//part_type_blend(global.Particle1,1);                         //This is the blend mode, either additive or normal
part_type_life(global.Particle1,5000,10000);                       //this is its lifespan in steps


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
