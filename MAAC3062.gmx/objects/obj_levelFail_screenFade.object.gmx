<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>obj_effect</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// The text to display (reason for level failure)
levelFailReason = "Your message could be here! Override obj_playerDeathobj_player.causeOfDeath";

// Halve room speed
//room_speed /= 2;

// Elapsed time since creation.
timeElapsed = 0;

// When to start showing the death message
showMessageAfter = 2000;

// When to start showing the buttons
showButtonsAfter = 2000;

// When to start the fade
startFadeAfter = 5000;

// Time it takes for the screen to fade to black.
fadeTime = 5000;

// Amount of fade time already elapsed
fadeTimeElapsed = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (timeElapsed &gt;= startFadeAfter) {
    // Fade in progress
    fadeTimeElapsed += global.deltaTime;
}

if (timeElapsed &gt;= showButtonsAfter) {
    var btnScale = 0.6;

    if (instance_number(obj_button_toHub) == 0) {
        var xPos = window_get_width()/2 + 300 - sprite_get_width(obj_button_toHub);
        var yPos = window_get_height()/2 + 100;
        
        var tmp = instance_create(xPos, yPos, obj_button_toHub);
        tmp.image_xscale = btnScale;
        tmp.image_yscale = btnScale;
        tmp.depth = depth - 1;
    }
        
    // Create buttons if they don't already exist:
    if (instance_number(obj_button_retry) == 0) {
        var xPos = window_get_width()/2 - 300 + sprite_get_width(obj_button_retry);
        var yPos = window_get_height()/2 + 100;

        var tmp = instance_create(xPos, yPos, obj_button_retry);
        tmp.image_xscale = btnScale;
        tmp.image_yscale = btnScale;
        tmp.depth = depth - 1;
    }

}

// Increase timeElapsed
timeElapsed += global.deltaTime;





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Set background color/alpha:
draw_set_alpha(fadeTimeElapsed/fadeTime);
draw_set_color(c_black);

// Draw background:
draw_rectangle(0, 0, room_width * 2, room_height * 2, false);

// Draw death message:
var xPos = window_get_width()/2;
var yPos = window_get_height()/2;

if (timeElapsed &gt; showMessageAfter) {
    draw_set_alpha(1);
    draw_set_font(fnt_levelFailMessage);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    
    draw_set_color(c_gray);
    draw_text(xPos-1, yPos-1, levelFailReason);
    draw_set_color(c_black);
    draw_text(xPos+2, yPos+2, levelFailReason);
    draw_set_color(c_red);
    draw_text(xPos, yPos, levelFailReason);
}

// Reset draw color/alpha:
draw_set_color(c_white);
draw_set_alpha(1);
draw_set_halign(fa_left);
draw_set_valign(fa_top);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
