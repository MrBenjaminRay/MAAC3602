<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lineOffset = 20;
titleScale = 2;
titleYOffset = -30;
titleLineOffset = 5;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// JOE: Try this, or some dark colour like it
draw_set_color(c_navy);

if(global.hubMode == 0) {
    draw_text(x, y + lineOffset*3, "Environment");
    draw_text(x, y + lineOffset*10, "Leader");
    
    

    var shadowOffset = 1;
    var shadowAlpha = 0.5;

    switch(global.selectedPlanet) {
        case 0:
            draw_text_transformed(x, y+titleYOffset, "Moon X-52", titleScale, titleScale, 0);
            draw_text(x, y + lineOffset*4, "Rocky and Mountainous.");
            draw_text(x, y + lineOffset*11, "Covered in rock. Unadvanced, but");
            draw_text(x, y + lineOffset*12, "heavily armoured.");
            break;
        case 1:
            draw_text_transformed(x, y+titleYOffset, "Tria", titleScale, titleScale, 0);
            draw_text(x, y + lineOffset*4, "Void of anything but trees the size of");
            draw_text(x, y + lineOffset*5, "skyscapers.");
            draw_text(x, y + lineOffset*11, "A venomous, ghostly being made of");
            draw_text(x, y + lineOffset*12, "brush.");
            break;
        case 2:
            draw_text_transformed(x, y+titleYOffset, "Desertonios", titleScale, titleScale, 0);
            draw_text(x, y + lineOffset*4, "Literally scorching sands.");
            draw_text(x, y + lineOffset*11, "A massive flying beast threatens");
            draw_text(x, y + lineOffset*12, "intruders.");
            break;
        case 3:
            draw_text_transformed(x, y+titleYOffset, "Glacius", titleScale, titleScale, 0);
            draw_text(x, y + lineOffset*4, "A planet stuck in an eternal ice age.");
            draw_text(x, y + lineOffset*11, "Somehow acts as a living creature");
            draw_text(x, y + lineOffset*12, "but is made solely of ice.");
            break;
        case 4:
            draw_text_transformed(x, y+titleYOffset, "Eaut", titleScale, titleScale, 0);
            draw_text(x, y + lineOffset*4, "A water-covered planet. A shipwreck");
            draw_text(x, y + lineOffset*5, "has been spotted. This technology");
            draw_text(x, y + lineOffset*6, "looks familiar.");
            draw_text(x, y + lineOffset*11, "A fish-like beast that consumes the");
            draw_text(x, y + lineOffset*12, "remains of sunken ships.");
            break;
        case 5:
            draw_text_transformed(x, y+titleYOffset, "Mike", titleScale, titleScale, 0);
            draw_text(x, y + lineOffset*4, "Our radar high temperatures");
            draw_text(x, y + lineOffset*5, "produced by burning gases.");
            draw_text(x, y + lineOffset*6, "");
            draw_text(x, y + lineOffset*11, "Unknown");
            draw_text(x, y + lineOffset*12, "");
            break;
        case 6:
            draw_text_transformed(x, y+titleYOffset, "Large Asteroid", titleScale, titleScale, 0);
            draw_text(x, y + lineOffset*4, "Was is love?");
            draw_text(x, y + lineOffset*5, "Baby don't hurt me,");
            draw_text(x, y + lineOffset*6, "Don't hurt me,");
            draw_text(x, y + lineOffset*11, "No more.");
            draw_text(x, y + lineOffset*12, "");
            break;
        default:
            draw_text(x, y, "Invalid selectedPlanet value");
            break;
    }
}
else if(global.hubMode == 1) {
    switch(global.selectedTower_Ability) {
        //TOWERS
        case 0:
            draw_text_transformed(x, y+titleYOffset, "Caterpillager", titleScale, titleScale, 0);
            draw_text(x, y + lineOffset*3, "Fires a barrage of lethal caterpillars.");
            draw_text(x, y + lineOffset*5, "Can target grounded and aerial enemies.");
            draw_text(x, y + lineOffset*7, "Damage: x x");
            draw_text(x, y + lineOffset*9, "Fire Rate: x x x");
            draw_text(x, y + lineOffset*11, "Range: x x");
            draw_text(x, y + lineOffset*13, "Armour: x x");
            draw_text(x, y + lineOffset*15, "Area Damage: None");
            draw_text(x, y + lineOffset*17, "Special Effect: None");
            draw_text(x, y + lineOffset*19, "Cost: 300 Energy");
            
            if(global.towerUpgradeLevel[0] &gt; 1)
                obj_unlock_upgrade.sprite_index = -1;
            else
                obj_unlock_upgrade.sprite_index = spr_upgrade;
            break;
        case 1:
            draw_text_transformed(x, y+titleYOffset, "Sloth on a Rope", titleScale, titleScale, 0);
            draw_text(x, y + lineOffset*3, "Lobs a love-seeking sloth on a leash.");
            draw_text(x, y + lineOffset*4, "The sloth will cling to the enemy until");
            draw_text(x, y + lineOffset*5, "the enemies dies.");
            draw_text(x, y + lineOffset*6, "Can target grounded and aerial enemies.");
            draw_text(x, y + lineOffset*7, "Damage: x");
            draw_text(x, y + lineOffset*9, "Fire Rate: x");
            draw_text(x, y + lineOffset*11, "Range: x x x");
            draw_text(x, y + lineOffset*13, "Armour: x x x");
            draw_text(x, y + lineOffset*15, "Area Damage: None");
            draw_text(x, y + lineOffset*17, "Special Effect: While attached, ");
            draw_text(x, y + lineOffset*18, "affected enemy is slowed. The slow");
            draw_text(x, y + lineOffset*19, "worsens over time.");
            draw_text(x, y + lineOffset*20, "Cost: 750 Energy");
            
            if(global.towerUpgradeLevel[1] &gt; 1)
                obj_unlock_upgrade.sprite_index = -1;
            else
                obj_unlock_upgrade.sprite_index = spr_upgrade;
            break;
        case 2:
            draw_text_transformed(x, y+titleYOffset, "Tactical Titmouse", titleScale, titleScale, 0);
            draw_text(x, y + lineOffset*3, "Fires a small, fragile bird causes a");
            draw_text(x, y + lineOffset*4, "nuclear explosion. Bounces once before");
            draw_text(x, y + lineOffset*5, "detonating.");
            draw_text(x, y + lineOffset*6, "Can only target grounded enemies.");
            draw_text(x, y + lineOffset*7, "Damage: x x x 1/2");
            draw_text(x, y + lineOffset*9, "Fire Rate: 1/2");
            draw_text(x, y + lineOffset*11, "Range: x x x x x");
            draw_text(x, y + lineOffset*13, "Armour: x x x");
            draw_text(x, y + lineOffset*15, "Area Damage: x x x x 1/2");
            draw_text(x, y + lineOffset*17, "Special Effect: None");
            draw_text(x, y + lineOffset*18, "");
            draw_text(x, y + lineOffset*20, "Cost: 1000 Energy");
            
            if(global.towerUpgradeLevel[2] &gt; 1)
                obj_unlock_upgrade.sprite_index = -1;
            else
                obj_unlock_upgrade.sprite_index = spr_upgrade;
            break;
        case 3:
            draw_text_transformed(x, y+titleYOffset, "Fire Ant Hose", titleScale, titleScale, 0);
            draw_text(x, y + lineOffset*3, "Sprays a stream of fiery fire ants at");
            draw_text(x, y + lineOffset*4, "close range.");
            draw_text(x, y + lineOffset*5, "Can target grounded and aerial enemies.");
            draw_text(x, y + lineOffset*7, "Damage: x x x x");
            draw_text(x, y + lineOffset*9, "Fire Rate: x x x x");
            draw_text(x, y + lineOffset*11, "Range: x");
            draw_text(x, y + lineOffset*13, "Armour: x x x x");
            draw_text(x, y + lineOffset*15, "Area Damage: x x x");
            draw_text(x, y + lineOffset*17, "Special Effect: Ants burn enemies,");
            draw_text(x, y + lineOffset*18, "increasing damage dealt with each ant");
            draw_text(x, y + lineOffset*20, "Cost: 1250 Energy");
            
            if(global.towerUpgradeLevel[4] &gt; 1)
                obj_unlock_upgrade.sprite_index = -1;
            else
                obj_unlock_upgrade.sprite_index = spr_upgrade;
            break;
        case 4:
            draw_text_transformed(x, y+titleYOffset, "109 Calibear Rifle", titleScale, titleScale, 0);
            draw_text(x, y + lineOffset*3, "Shoots a soaring teddy bear with its");
            draw_text(x, y + lineOffset*4, "fist out.");
            draw_text(x, y + lineOffset*5, "Can only target aerial enemies.");
            draw_text(x, y + lineOffset*7, "Damage: x x x 1/2");
            draw_text(x, y + lineOffset*9, "Fire Rate: x x");
            draw_text(x, y + lineOffset*11, "Range: x x x x");
            draw_text(x, y + lineOffset*13, "Armour: x x");
            draw_text(x, y + lineOffset*15, "Area Damage: x x x 1/2");
            draw_text(x, y + lineOffset*17, "Special Effect: The teddy bear can pass");
            draw_text(x, y + lineOffset*18, "through and damage multiple enemies.");
            draw_text(x, y + lineOffset*19, "Cost: 750 Energy");
            if(global.towerUpgradeLevel[3] &gt; 1)
                obj_unlock_upgrade.sprite_index = -1;
            else
                obj_unlock_upgrade.sprite_index = spr_upgrade;
            break;
        case 5:
            draw_text_transformed(x, y+titleYOffset, "RT-6100", titleScale, titleScale, 0);
            draw_text(x, y + lineOffset*3, "The magnificent Rainbow Trout Repeater");
            draw_text(x, y + lineOffset*4, "Model 6100. A machine that propels");
            draw_text(x, y + lineOffset*5, "battle-ready trouts at high speeds.");
            draw_text(x, y + lineOffset*6, "Player-controlled");
            draw_text(x, y + lineOffset*7, "Damage: x x x x x");
            draw_text(x, y + lineOffset*9, "Fire Rate: x x x x x");
            draw_text(x, y + lineOffset*11, "Range: x x x x 1/2");
            draw_text(x, y + lineOffset*13, "Armour: x x x x x");
            draw_text(x, y + lineOffset*15, "Area Damage: x x x");
            draw_text(x, y + lineOffset*17, "Special Effect: Player must mount ");
            draw_text(x, y + lineOffset*18, "tower and use the mouse to fire. ");
            draw_text(x, y + lineOffset*19, "Needs to reload periodically.");
            draw_text(x, y + lineOffset*20, "Cost: 2000 Energy");
            
            if(global.towerUpgradeLevel[5] &gt; 1)
                obj_unlock_upgrade.sprite_index = -1;
            else
                obj_unlock_upgrade.sprite_index = spr_upgrade;
            break;
        case 6:
            draw_text_transformed(x, y+titleYOffset, "Mecha-Goat", titleScale, titleScale, 0);
            draw_text_transformed(x, y+titleLineOffset, "Deployer", titleScale, titleScale, 0);
            draw_text(x, y + lineOffset*3, "Fires a JET PROPELLED, SUPER");
            draw_text(x, y + lineOffset*4, "POWERFUL ROBOT GOAT. Slow to take");
            draw_text(x, y + lineOffset*5, "off, but annihilates its targets.");
            draw_text(x, y + lineOffset*6, "Can target grounded and aerial enemies.");
            draw_text(x, y + lineOffset*7, "Damage: x x x x x x x x");
            draw_text(x, y + lineOffset*9, "Fire Rate: x x");
            draw_text(x, y + lineOffset*11, "Range: x x x x x");
            draw_text(x, y + lineOffset*13, "Armour: x x x x x");
            draw_text(x, y + lineOffset*15, "Area Damage: x x x x x");
            draw_text(x, y + lineOffset*17, "Special Effect: BIG BOOM.");
            draw_text(x, y + lineOffset*18, "");
            draw_text(x, y + lineOffset*19, "Cost: 2000 Energy");
            
            if(global.towerUpgradeLevel[6] &gt; 1)
                obj_unlock_upgrade.sprite_index = -1;
            else
                obj_unlock_upgrade.sprite_index = spr_upgrade;
            break;
            
        //ABILITIES    
        case -1:
            draw_text_transformed(x, y+titleYOffset, "Force Field Pulse", titleScale, titleScale, 0);
            draw_text(x, y + lineOffset*3, "A force field radiates out of your");
            draw_text(x, y + lineOffset*4, "space suit, pushing nearby enemies away.");
            draw_text(x, y + lineOffset*6, "Damage: None");
            draw_text(x, y + lineOffset*8, "Range: x x");
            draw_text(x, y + lineOffset*10, "Uses: Unlimited");
            draw_text(x, y + lineOffset*12, "Cooldown: 10 seconds.");
            
            if(global.plrAbilityUpgraded[0])
                obj_unlock_upgrade.sprite_index = -1;
            else
                obj_unlock_upgrade.sprite_index = spr_upgrade;
            
            break;
        case -2:
            draw_text_transformed(x, y+titleYOffset, "Super Sneaky", titleScale, titleScale, 0);
            draw_text_transformed(x, y+titleLineOffset, "Snaring Snakes", titleScale, titleScale, 0);
            draw_text(x, y + lineOffset*3, "You deploy several snakes in both");
            draw_text(x, y + lineOffset*4, "directions, snaring enemies that they");
            draw_text(x, y + lineOffset*5, "touch for several seconds.");
            draw_text(x, y + lineOffset*6, "Damage: None");
            draw_text(x, y + lineOffset*8, "Range: x x x x");
            draw_text(x, y + lineOffset*10, "Uses: Unlimited");
            draw_text(x, y + lineOffset*12, "Cooldown: 15 seconds.");
            
            if(global.plrAbilityUpgraded[1])
                obj_unlock_upgrade.sprite_index = -1;
            else
                obj_unlock_upgrade.sprite_index = spr_upgrade;
            
            break;
        case -3:
            draw_text_transformed(x, y+titleYOffset, "Extreme Blaster", titleScale, titleScale, 0);
            draw_text_transformed(x, y+titleLineOffset, "Boost", titleScale, titleScale, 0);
            draw_text(x, y + lineOffset*3, "Your pistol starts firing at crazy speeds");
            draw_text(x, y + lineOffset*4, "for several seconds.");
            draw_text(x, y + lineOffset*5, "Activate again to cancel.");
            draw_text(x, y + lineOffset*6, "Damage: x x x");
            draw_text(x, y + lineOffset*8, "Range: x x x x");
            draw_text(x, y + lineOffset*10, "Uses: Unlimited");
            draw_text(x, y + lineOffset*12, "Cooldown: 15 seconds");
            draw_text(x, y + lineOffset*13, "(starting after buff expires).");
            
            if(global.plrAbilityUpgraded[2])
                obj_unlock_upgrade.sprite_index = -1;
            else
                obj_unlock_upgrade.sprite_index = spr_upgrade;
            
            break;
        case -4:
            draw_text_transformed(x, y+titleYOffset, "It's Raining", titleScale, titleScale, 0);
            draw_text_transformed(x, y+titleLineOffset, "Cats and Dogs!", titleScale, titleScale, 0);
            draw_text(x, y + lineOffset*3, "Tons of cats and dogs rain from the sky.");
            draw_text(x, y + lineOffset*4, "Their damage is unexpectedly high.");
            draw_text(x, y + lineOffset*6, "Damage: x x x x x");
            draw_text(x, y + lineOffset*8, "Range: x x x x x");
            draw_text(x, y + lineOffset*10, "Uses: Twice per level.");
            draw_text(x, y + lineOffset*12, "Cooldown: 20 seconds");
            draw_text(x, y + lineOffset*13, "(starting after buff expires).");
            
            if(global.plrAbilityUpgraded[3])
                obj_unlock_upgrade.sprite_index = -1;
            else
                obj_unlock_upgrade.sprite_index = spr_upgrade;
            
            break;
    }
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
