<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// ALWAYS SET POSITION FOR INHERITING OBJECTS

position = ""; // Must be set by inheriting object to top_left, top_right, bottom_left, bottom_right

// OVERRIDE IN INHERITING OBJECTS IF USING top_right OR bottom_right POSITION
// SO THAT THE TEXT &amp; ICON ARE RIGHT-ALIGNED

rightAligned = false; // Override this to cause text to be drawn on left side of icon (icon &amp; text are right-aligned)
textOffset_x = 24; // Override with negative value in inheriting class if rightAligned=true
changeCueOffset_x = 24; // Override with negative value in inheriting class if rightAligned=true
changeCueTime = 1000;       // Amount of time to display cue before fading. Will be different for minerals/energy.

// SHOULDN'T NEED TO OVERRIDE THESE UNLESS YOU WANT TO CHANGE VERT POSITION OF TEXT/CUE

textOffset_y = 0; // Leave at 0 for text to be vertically centered with icon
changeCueOffset_y = 10; // Drop cue text below 


// STUFF TO LEAVE ALONE (generally speaking)

textShadowOffset_x = 2; // Always positive value
textShadowOffset_y = 2; // Always positive value

changeCueAmount = 0;        // Value to be drawn in change cue (e.g. 100 becomes +100), etc.)
changeCueTimeLeft = 0;      // Amount of change cue time left (gets set to changeCueTime when cue displayed)
changeCueAlpha = 0;         // Alpha level to draw cue (gets set to 1 when cue displayed, then fades)
changeCueAlphaFade = 0.003; // Reduce alpha by this amount * deltaTime
changeCueColor = "";        // Colour (will be set by script changing amount)
changeCueColor_Increase = make_color_rgb(0, 255, 0); // Colour of change cue when value increasing
changeCueColor_Decrease = make_color_rgb(255, 0, 0); // Colour of change cue when value decreasing

changeCueShadowOffset_x = 1; // Always positive value
changeCueShadowOffset_y = 1; // Always positive value

scaleNormal = 1;
scaleLevelBoosted = 1.4;
scaleLevelBoostedResetSpeed = 0.001;
scaleLevelShrunk = .6;
scaleLevelShrunkResetSpeed = 0.001;

position_offset_x = 25; // Always positive value - how far away (x) from position to be drawn
position_offset_y = 25; // Always positive value - how far away (y) from position to be drawn

scale = scaleNormal;

// DO NOT SET THIS VALUE ANYWHERE. It will be set automatically in Step code
// by the inheriting objects based on either global.energy or global.minerals.
// Always change energy/mineral values with scripts scr_energy_change() and scr_minerals_change()
currentValueToDraw = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (scale &gt; scaleNormal) {
    // Shrink scale towards normal size based on boost reset speed
    scale -= scaleLevelBoostedResetSpeed * global.deltaTime;
}

if (scale &lt; scaleNormal) {
    // Increase scale towards normal size based on shrink reset speed
    scale += scaleLevelShrunkResetSpeed * global.deltaTime;
}

// Set image scale
image_xscale = scale;
image_yscale = scale;

show_debug_message("Current view width: " + string(view_wview[0]));

if (position == "top_left") {
    x = 0 + position_offset_x;
    y = 0 + position_offset_y;
} else if (position == "top_right") {
    if (window_get_fullscreen()) {
        x = global.screenWidth - position_offset_x;
    } else {
        x = view_wview[0] - position_offset_x;
    }
    y = 0 + position_offset_y;
} else if (position == "bottom_left") {
    x = 0 + position_offset_x;
    y = view_hview[0] - position_offset_y;
} else if (position == "bottom_right") {
    if (window_get_fullscreen()) {
        x = global.screenWidth - position_offset_x;
    } else {
        x = view_wview[0] - position_offset_x;
    }
    y = view_hview[0] - position_offset_y;
} else {
    show_debug_message("ERROR:  Invalid position for " + string(object_get_name(object_index)));
    // Draw center of screen to make it obvious there's an issue
    x = view_wview[0]/2;
    y = view_hview[0]/2;
}

// Decrement change cue time left and alpha (if displayed at all)
if (changeCueTimeLeft &gt; 0) {
    // Cue still being displayed at full alpha
    changeCueAlpha = 1; // Force alpha to 1 when cue still being displayed
    changeCueTimeLeft -= global.deltaTime;
    changeCueTimeLeft = clamp(changeCueTimeLeft, 0, changeCueTime); // Prevent dropping &lt; 0
} else {
    // Cue is fading out
    changeCueAlpha -= changeCueAlphaFade * global.deltaTime;
    changeCueAlpha = clamp(changeCueAlpha, 0, 1); // Prevent dropping &lt; 0
}

// Set change cue colour based on current displayed amount
if (changeCueAmount &gt; 0) {
    changeCueColor = changeCueColor_Increase;
} else {
    changeCueColor = changeCueColor_Decrease;
}

// When change cue faded out, reset the value.
if (changeCueAlpha == 0) {
    changeCueAmount = 0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Draw Icon</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw the icon

if (scale &gt; scaleNormal) {
    // Shrink scale towards normal size based on boost reset speed
    scale -= scaleLevelBoostedResetSpeed * global.deltaTime;
}

if (scale &lt; scaleNormal) {
    // Increase scale towards normal size based on shrink reset speed
    scale += scaleLevelShrunkResetSpeed * global.deltaTime;
}

// Set image scale
image_xscale = scale;
image_yscale = scale;

// Draw the sprite in Draw GUI event to force it to appear above objects in the level
draw_self();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Draw the level</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// DRAW THE LEVEL

// Set the font
draw_set_font(fnt_hud_mineralEnergyLevels);

if (rightAligned) {
    draw_set_halign(fa_right);
} else {
    draw_set_halign(fa_left);
}

// Set y offset based on string height
var h = string_height("ASD");
textOffset_y = -h / 2;

// Draw main level shadow
draw_set_colour(c_black);
draw_set_alpha(0.5);
draw_text(x+textOffset_x+textShadowOffset_x, y+textOffset_y+textShadowOffset_y, currentValueToDraw);

// Draw main level
draw_set_colour(c_yellow);
draw_set_alpha(1);
draw_text(x+textOffset_x, y+textOffset_y, currentValueToDraw);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Draw the change cue</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// DRAW THE CHANGE CUE

// Set the font
draw_set_font(fnt_hud_mineralEnergyLevelCues);

// Add + or - before cue amount 
var plusOrMinus;
if (changeCueAmount &gt; 0) {
    plusOrMinus = "+";
} else {
    plusOrMinus = "-";
}

// Draw if alpha above 0
if (changeCueAlpha &gt; 0) {

    // Draw the shadow first
    draw_set_alpha(changeCueAlpha/2); // Half as opaque as cue level
    draw_set_colour(c_black);
    draw_text(x+changeCueOffset_x+changeCueShadowOffset_x, y+changeCueOffset_y+changeCueShadowOffset_y, plusOrMinus + string(changeCueAmount));
    
    // Draw change cue
    draw_set_alpha(changeCueAlpha);
    draw_set_colour(changeCueColor);
    
    draw_text(x+changeCueOffset_x, y+changeCueOffset_y, plusOrMinus + string(changeCueAmount));
}

// RESET DRAW PARAMETERS so that we don't screw up stuff drawn by objects after this one
draw_set_alpha(1);
draw_set_halign(fa_left);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Don't draw anything. This is a HUD element, so we move
// all drawing to Draw GUI event instead, including the sprite.
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
