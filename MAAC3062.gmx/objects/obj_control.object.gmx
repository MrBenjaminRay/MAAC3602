<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dummy_cntrl</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();
draw_set_colour(c_white);
global.messageBoxAnimSpeed = 0.20;

global.musicVolume = 0.6;
global.musicFadeIn = 240; //per frame until at musicVolume;

// Store screen dimensions
global.screenWidth = display_get_width();
global.screenHeight = display_get_height();
global.screenRatio = global.screenWidth / global.screenHeight;

// Store some mouse stuff so that it's available every step (and only checked once per step)
// Mouse position relative to the window (window_mouse_get_x/window_mouse_get_y)
global.window_mouse_x = 0;
global.window_mouse_y = 0;
// Mouse position relative to the view (window_view_mouse_get_x/window_view_mouse_get_y)
global.view_mouse_x = 0;
global.view_mouse_y = 0;
// Mouse position relative to the room (mouse_x/mouse_y)
global.room_mouse_x = 0;
global.room_mouse_y = 0;

global.messageDistance = 128; // distance the player can be from a distanceMessageBox
                                // before it disappears.
global.messageScale = 0.4; // The scale of message boxes and text sprites

global.canWarp = false;

global.moonTutorialDone = false;    // Track when player finished moon tutorial - will skip it if they die or replay the level

global.deltaTime = delta_time;

/* States:
 *      Normal
 *      Build
 *      Destroy
 *      Paused
 */
global.state = "Normal";

/**NEW**/
global.upgradeTokens = 0;

global.minerals = 0;
global.energy = 900;    // The amount of energy the player currently has throughout the game.
                        // Should start at 3x cost of basic tower.
global.fuel = 0; // Max fuel is 100.
global.maxFuel = 0; // At the beginning of each level, this value is set to the target fuel level.
global.distanceFromShipToPlayer = -1;
global.currentLevelComplete = 0;    // Used to make sure that player doesn't lose level
                                    // because of death during the level complete
                                    // animation/sequence
global.currentLevelFailed = 0;      // Used to prevent damage and possibly other things from occurring
                                    // once the player has failed the level due to death or losing all miners
                             
global.skipToNavRoom = false; //used to skip to nav room when closing clickMessage
                                    
global.moonLevelComplete = 0;
global.forestLevelComplete = 0;
global.desertLevelComplete = 0;
global.iceLevelComplete = 0;
global.waterLevelComplete = 0;
global.asteroidLevelComplete = 0;
global.marsLevelComplete = 0;
global.earthLevelComplete = 0;

global.moonRewardsObtained = 0;
global.forestRewardsObtained = 0;
global.desertRewardsObtained = 0;
global.iceRewardsObtained = 0;
global.waterRewardsObtained = 0;
global.asteroidRewardsObtained = 0;
global.marsRewardsObtained = 0;
global.earthRewardsObtained = 0;






global.catsAndDogsUnlock = 0;

// Tower unlock costs

global.caterpillagerUnlockCost = 1;
global.slothRopeUnlockCost = 2000;
global.titMouseUnlockCost = 3000;
global.CalibearUnlockCost = 3000;
global.fireAntUnlockCost = 5000;
global.RT6100UnlockCost = 10000;
global.mechaGoatUnlockCost = 13000;
//global.armadilloUnlockCost = 5000;
//global.porpoiseUnlockCost = 6000;
//global.gorillaUnlockCost = 5000;
//global.electricEelUnlockCost = 7500;

// Tower and ability upgrade costs

global.caterpillagerUpgradeCost = 1500;
global.slothRopeUpgradeCost = 2500;
global.titMouseUpgradeCost = 5000;
global.fireAntUpgradeCost = 3500;
global.CalibearUpgradeCost = 3000;
global.RT6100UpgradeCost = 6000;
global.mechaGoatUpgradeCost = 8000;
//global.armadilloUpgradeCost = 4500;
//global.porpoiseUpgradeCost = 3500;
//global.gorillaUpgradeCost = 3000;
//global.electricEelUpgradeCost = 3000;

global.fieldPulseUpgradeCost = 2000;
global.sneakySnakesUpgradeCost = 2000;
global.blasterUpgradeCost = 5000;
global.catsAndDogsUpgradeCost = 10000;

global.lastNotificationDepth = -10000; // Needed for notifications. Should be really high negative.

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Update delta time global variable
global.deltaTime = (delta_time) / 1000;

// Update mouse position global variables
// Mouse position relative to the window (window_mouse_get_x/window_mouse_get_y)
global.window_mouse_x = window_mouse_get_x();
global.window_mouse_y = window_mouse_get_y();
// Mouse position relative to the view (window_view_mouse_get_x/window_view_mouse_get_y)
global.view_mouse_x = window_view_mouse_get_x(0);
global.view_mouse_y = window_view_mouse_get_y(0);
// Mouse position relative to the room (mouse_x/mouse_y)
global.room_mouse_x = mouse_x;
global.room_mouse_y = mouse_y;


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
