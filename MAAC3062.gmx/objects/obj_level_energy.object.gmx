<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enery_resource</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>textOffset_x = 24;
textOffset_y = 0;

shadowOffset_x = 2;
shadowOffset_y = 2;

scaleNormal = 1;
scaleLevelBoosted = 1.4;
scaleLevelBoostedShrinkSpeed = 0.001;
scale = scaleNormal;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (scale &gt; scaleNormal) {
    // Shrink scale towards normal size based on shrink speed
    scale -= scaleLevelBoostedShrinkSpeed * global.deltaTime;
}

// Set image scale
image_xscale = scale;
image_yscale = scale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Set the right font
draw_set_font(fnt_mineralEnergyLevels);

// Set y offset based on string height
var h = string_height("ASD");
textOffset_y = -h / 2;

// Draw shadow
draw_set_colour(c_black);
draw_set_alpha(0.5);
draw_text(x+textOffset_x+shadowOffset_x, y+textOffset_y+shadowOffset_y, "Energy: " + string(global.energy));

// Draw level
draw_set_colour(c_yellow);
draw_set_alpha(1);
draw_text(x+textOffset_x, y+textOffset_y, "Energy: " + string(global.energy));

// Draw special highlight if level recently boosted
// Use alpha to fade special highlight colour out as image scale goes back to normal
draw_set_colour(c_lime);
if (scale &gt; scaleNormal) {
    draw_set_colour(c_lime);

    // Calculate alpha based on how recently the level was boosted
    // using difference between actual scale and boosted scale
    var potentialBoost = scaleLevelBoosted - scaleNormal;
    var actualBoost = scale - scaleNormal;
    draw_set_alpha(actualBoost / potentialBoost);
    draw_text(x+textOffset_x, y+textOffset_y, "Energy: " + string(global.energy));    
}

// Reset alpha for the next thing that is drawn
draw_set_alpha(1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
