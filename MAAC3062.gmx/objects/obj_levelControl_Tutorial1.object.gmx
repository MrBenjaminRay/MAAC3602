<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dummy_levelControl</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>obj_levelControl</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//var tutorialBox1 = instance_create(96, 608, obj_messageBox);
//ds_list_add(tutorialBox1.list_text, "Press WASD to move");
//ds_list_add(tutorialBox1.list_text, "and left click to shoot.");


/* Use states to track player's progress through the tutorial.
 *  0: Use WASD to pick up 3 strategically placed energy orbs
 *  1: Fire blaster to kill enemies and pick up their energy orbs
 *
 */
shipSpin = .15;
shipSpin_AfterBounce = -.75;

state = 0;

//state1_ball = instance_create(224, 320, obj_drop_energy);
//state2_ball = instance_create(608, 224, obj_drop_energy);
//state3_ball = instance_create(320, 544, obj_drop_energy);
//state4_ball = instance_create(250, 100, obj_drop_energy);
//state5_ball = instance_create(300, 100, obj_drop_energy);

// Set energy values to 0 for the 3 drops on the level at the start,
// and give player all the time he wants to pick them up.
with (obj_drop_energy) {
    value = 0;  // No energy orbs
    maxLife = 100000000; // Permanent
}

instance_deactivate_object(obj_hud_levelEnergy);
instance_deactivate_object(obj_enemy);
instance_deactivate_object(obj_warp);

msg1 = instance_create(525, 320, obj_messageBox);
ds_list_add(msg1.list_text, "Use WASD to pick up the 3 items.");

msg2 = noone;
msg3 = noone;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room_speed  * 1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room_speed * 3</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>119</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_path</functionname>
        <codestring></codestring>
        <whoName>obj_ship</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>8</kind>
            <path>path_tutorial_ship</path>
          </argument>
          <argument>
            <kind>0</kind>
            <string>4</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shipSpin</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>shipSpin_AfterBounce</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_asteroidImpact</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>119</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_path</functionname>
        <codestring></codestring>
        <whoName>obj_player</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>8</kind>
            <path>path_tutorial_player</path>
          </argument>
          <argument>
            <kind>0</kind>
            <string>3</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>542</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_transform</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Rotate ship</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Rotate the ship as it flies through the air
// Ends up outside of view for rest of level
// We don't care that it continues to spin even though out of view
if (instance_exists(obj_ship)) {
    obj_ship.image_angle += shipSpin;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Tutorial State Management</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Make sure energy drops dropped by enemies on this level are permanent
// so player has all the time he wants to pick them up
with (obj_drop_energy) {
    maxLife = 100000000; // Permanent
}

if (state == 0) {

    // Player needs to collect all of the energy drops, which will require full WASD movement.
    if (instance_number(obj_drop_energy) == 0) {
        // Player can move to next state of tutorial
        scr_tutorial_thumbsUp(obj_player.x, obj_player.y - 30);
        // Set the state
        state = 1;
        // Activate the enemies
        instance_activate_object(obj_hud_levelEnergy);
        instance_activate_object(obj_enemy);
        // Destroy the previous instruction
        with (msg1) { instance_destroy(); }
        if (!instance_exists(msg2)) {
            // Show the next instruction
            msg2 = instance_create(obj_player.x + 50, obj_player.y - 60, obj_messageBox);
            ds_list_add(msg2.list_text, "Kill the enemies with left mouse,");
            ds_list_add(msg2.list_text, "and collect the energy they drop.");
            ds_list_add(msg2.list_text, "We store the energy collected.");        
        }

    }
    
} else if (state == 1) {

    // Player needs to kill the enemies and collect any energy dropped    
    if (instance_number(obj_enemy) == 0 &amp;&amp; instance_number(obj_drop_energy) == 0) {
        // Player can move to next state of tutorial
        scr_tutorial_thumbsUp(obj_player.x, obj_player.y - 30);
        // Set the state
        state = 2;
        // Activate the enemies
        instance_activate_object(obj_warp);
        // Destroy the previous instruction
        with (msg2) { instance_destroy(); }
        if (!instance_exists(msg3)) {
            // Show the next instruction
            msg3 = instance_create(obj_player.x + 50, obj_player.y - 60, obj_messageBox);
            ds_list_add(msg3.list_text, "Proceed all the way to the right");
            ds_list_add(msg3.list_text, "to go find your ship!");        
        }

    }
    
} 
return 0;


if (state == 2) {

        // Ball 1 has been picked up
        scr_tutorial_thumbsUp(state2_thumbsUp_X, state2_thumbsUp_Y);
        // Set state and activate next ball
        state = 2;
        instance_activate_object(state2_ball);
        // Destroy the previous instruction
        with (msg) { instance_destroy(); }
        // Show the next instruction
        msg = instance_create(state1_thumbsUp_X + 20, state1_thumbsUp_Y, obj_messageBox);
        ds_list_add(msg.list_text, "Use D to move RIGHT to");
        ds_list_add(msg.list_text, "pick up the item.");   
    }
 else if (state == 2) {
    if (!instance_exists(state2_ball)) {
        // Ball 2 has been picked up
        scr_tutorial_thumbsUp(state3_thumbsUp_X, state3_thumbsUp_Y);
        // Set state and activate next ball
        state = 3;
        instance_activate_object(state3_ball);
        // Destroy the previous instruction
        with (msg) { instance_destroy(); }
        // Show the next instruction
        msg = instance_create(state3_thumbsUp_X + 40, state3_thumbsUp_Y, obj_messageBox);
        ds_list_add(msg.list_text, "Use A to JUMP to platform");
        ds_list_add(msg.list_text, "to pick up the item.");
    }
} else if (state == 3) {
    if (!instance_exists(state3_ball)) {
        // Ball 3 has been picked up
        scr_tutorial_thumbsUp(state4_thumbsUp_X, state4_thumbsUp_Y);
        // Set state and activate next ball
        state = 4;
        instance_activate_object(state4_ball);
        // Destroy the previous instruction
        with (msg) { instance_destroy(); }
        // Show the next instruction
        msg = instance_create(state4_thumbsUp_X + 60, state4_thumbsUp_Y, obj_messageBox);
        ds_list_add(msg.list_text, "Use S to DROP to lower platform");
        ds_list_add(msg.list_text, "to pick up the item.");
    }
} else if (state == 4) {
    if (!instance_exists(state4_ball)) {
        // Ball 4 has been picked up
        scr_tutorial_thumbsUp(state5_thumbsUp_X, state5_thumbsUp_Y);
        // Set state and activate next ball
        state = 5;
        instance_activate_object(state5_ball);
        // Destroy the previous instruction
        with (msg) { instance_destroy(); }
        // Show the next instruction
        msg = instance_create(state5_thumbsUp_X + 80, state5_thumbsUp_Y, obj_messageBox);
        // Activate the energy level  (MOVE THIS SOMEWHERE ELSE)
        instance_activate_object(obj_hud_levelEnergy);
    }
} else if (state == 5) {
    
} else if (state == 6) {

} else if (state == 7) {

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//var messageBox = instance_create(200, 200, obj_messageBox);
//ds_list_add(messageBox.list_text, "");
//ds_list_add(messageBox.list_text, "Your Energy Bar (top left) will turn");
//ds_list_add(messageBox.list_text, "green when you have enough Energy to");
//ds_list_add(messageBox.list_text, "fuel your ship's departure!");
//ds_list_add(messageBox.list_text, "");

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
