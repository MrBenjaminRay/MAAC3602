<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dummy_levelControl</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>obj_levelControl</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//global.tutorial_part1 = true;
//global.tutorial_part2 = false;
//global.tutorial_part3 = false;

//var tutorialBox1 = instance_create(96, 608, obj_messageBox);
//ds_list_add(tutorialBox1.list_text, "Press WASD to move");
//ds_list_add(tutorialBox1.list_text, "and left click to shoot.");

with(obj_enemy) {
    scr_entity_stopMoving_Sudden()
}

/* Use states to track player's progress through the tutorial.
 *  1: Move left
 *  2: Move right
 *  3: Jump
 *  4: Drop
 *  5: Attack (shoot the target)
 *  6: Kill an enemy
 *  7: Pick up an energy drop
 *  8: Go to the right to go towards the ship  (ship arrow)
 *
 */

state = 0; // Will immediately be switched to state 1


state1_thumbsUp_X = 450;
state1_thumbsUp_Y = 600;
state2_thumbsUp_X = 450;
state2_thumbsUp_Y = 600;
state3_thumbsUp_X = 450;
state3_thumbsUp_Y = 600;
state4_thumbsUp_X = 450;
state4_thumbsUp_Y = 600;
state5_thumbsUp_X = 450;
state5_thumbsUp_Y = 600;
state6_thumbsUp_X = 450;
state6_thumbsUp_Y = 600;
state7_thumbsUp_X = 450;
state7_thumbsUp_Y = 600;
state8_thumbsUp_X = 450;
state8_thumbsUp_Y = 600;

state1_ball = instance_create(100, 100, obj_drop_energy);
state2_ball = instance_create(150, 100, obj_drop_energy);
state3_ball = instance_create(200, 100, obj_drop_energy);
state4_ball = instance_create(250, 100, obj_drop_energy);
state5_ball = instance_create(300, 100, obj_drop_energy);

// Set energy values to 0
with (obj_drop_energy) {
    value = 0;
}

instance_deactivate_object(obj_hud_levelEnergy);
instance_deactivate_object(obj_enemy);
instance_deactivate_object(obj_drop_energy);
instance_activate_object(obj_player);
instance_activate_object(obj_enemy_ground_spider_large);


// TEMP
msgTemp = instance_create(state1_thumbsUp_X-200, state1_thumbsUp_Y, obj_messageBox);
ds_list_add(msgTemp.list_text, "Tutorial still in progress.");
ds_list_add(msgTemp.list_text, "Will be done asap. -Ben"); 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>120</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Activate the ball for state 1, which gets state 1 started
instance_activate_object(state1_ball);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (state == 0) {

    // Wait for alarm to activate the first ball. Until then, we stay in state 0.
    if (instance_exists(state1_ball)) {
        // Ball 1 exists (has been activated)
        state = 1;
        // Show the next instruction
        msg = instance_create(state1_thumbsUp_X, state1_thumbsUp_Y, obj_messageBox);
        ds_list_add(msg.list_text, "Use A to move LEFT to");
        ds_list_add(msg.list_text, "pick up the item.");    
    }
    
} else if (state == 1) {
    if (!instance_exists(state1_ball)) {
        // Ball 1 has been picked up
        scr_tutorial_thumbsUp(state2_thumbsUp_X, state2_thumbsUp_Y);
        // Set state and activate next ball
        state = 2;
        instance_activate_object(state2_ball);
        // Destroy the previous instruction
        with (msg) { instance_destroy(); }
        // Show the next instruction
        msg = instance_create(state1_thumbsUp_X + 20, state1_thumbsUp_Y, obj_messageBox);
        ds_list_add(msg.list_text, "Use D to move RIGHT to");
        ds_list_add(msg.list_text, "pick up the item.");   
    }
} else if (state == 2) {
    if (!instance_exists(state2_ball)) {
        // Ball 2 has been picked up
        scr_tutorial_thumbsUp(state3_thumbsUp_X, state3_thumbsUp_Y);
        // Set state and activate next ball
        state = 3;
        instance_activate_object(state3_ball);
        // Destroy the previous instruction
        with (msg) { instance_destroy(); }
        // Show the next instruction
        msg = instance_create(state3_thumbsUp_X + 40, state3_thumbsUp_Y, obj_messageBox);
        ds_list_add(msg.list_text, "Use A to JUMP to platform");
        ds_list_add(msg.list_text, "to pick up the item.");
    }
} else if (state == 3) {
    if (!instance_exists(state3_ball)) {
        // Ball 3 has been picked up
        scr_tutorial_thumbsUp(state4_thumbsUp_X, state4_thumbsUp_Y);
        // Set state and activate next ball
        state = 4;
        instance_activate_object(state4_ball);
        // Destroy the previous instruction
        with (msg) { instance_destroy(); }
        // Show the next instruction
        msg = instance_create(state4_thumbsUp_X + 60, state4_thumbsUp_Y, obj_messageBox);
        ds_list_add(msg.list_text, "Use S to DROP to lower platform");
        ds_list_add(msg.list_text, "to pick up the item.");
    }
} else if (state == 4) {
    if (!instance_exists(state4_ball)) {
        // Ball 4 has been picked up
        scr_tutorial_thumbsUp(state5_thumbsUp_X, state5_thumbsUp_Y);
        // Set state and activate next ball
        state = 5;
        instance_activate_object(state5_ball);
        // Destroy the previous instruction
        with (msg) { instance_destroy(); }
        // Show the next instruction
        msg = instance_create(state5_thumbsUp_X + 80, state5_thumbsUp_Y, obj_messageBox);
        // Activate the energy level  (MOVE THIS SOMEWHERE ELSE)
        instance_activate_object(obj_hud_levelEnergy);
    }
} else if (state == 5) {
    
} else if (state == 6) {

} else if (state == 7) {

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//var messageBox = instance_create(200, 200, obj_messageBox);
//ds_list_add(messageBox.list_text, "");
//ds_list_add(messageBox.list_text, "Your Energy Bar (top left) will turn");
//ds_list_add(messageBox.list_text, "green when you have enough Energy to");
//ds_list_add(messageBox.list_text, "fuel your ship's departure!");
//ds_list_add(messageBox.list_text, "");

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
