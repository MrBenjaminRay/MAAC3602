<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_spawner</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>object</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spawnRate = 1280;                         // The amount of delta time between spawns.
spawnRateCounter = 0;                     // The amount of delta time since the last spawn.

spawnChangeRate = 25600;                  // The amount of delta time between switching enemies to spawn.
spawnChangeRateCounter = spawnChangeRate; // The amount of delta time since the last spawn-type switch.

numObjToSpawn = 0;                        // The number of objects to spawn.
numObjSpawned = 0;                        // The number of objects spawned so-far.
objToSpawn = noone;                       // The object to spawn.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.state == "Paused") {
    return 0;
}

if (spawnRateCounter &lt; spawnRate) {
    spawnRateCounter += global.deltaTime;
} else if (objToSpawn != noone) {
    spawnRateCounter = 0;

    if (numObjSpawned &lt; numObjToSpawn) {
        numObjSpawned++;
        var enemy = instance_create(x, y, objToSpawn);
    }
}

if (spawnChangeRateCounter &lt; spawnChangeRate) {
    spawnChangeRateCounter += global.deltaTime;
} else {
    numObjSpawned = 0;
    numObjToSpawn = irandom_range(2, 5);
    spawnChangeRateCounter = 0;
    
    switch (irandom_range(0,5)) {
        case 0: {
            objToSpawn = obj_enemy_ground_light;
            break;
        }
        case 1: {
            objToSpawn = obj_enemy_ground_medium;
            break;
        }
        case 2: {
            objToSpawn = obj_enemy_ground_heavy;
            break;
        }
        case 3: {
            objToSpawn = obj_enemy_ground_jackal;
            break;
        }
        case 4: {
            objToSpawn = obj_enemy_air_light;
            break;
        }
        case 5: {
            objToSpawn = obj_enemy_air_heavy;
            break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
